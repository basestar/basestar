$version: LATEST

Base:
  type: object
  expand:
    - test
  properties:
    email:
      type: string

View:
  type: view
  from:
    schema: Base
    expand:
      - test
  properties:
    email: email

WithCompactExpand:
  type: view
  from:
    schema: Base
    expand: test
  properties:
    email: email

Person:
  type: object
  properties:
    name:
      type: string

PersonAdddress:
  type: object
  properties:
    name:
      type: string
    otherName:
      type: string
    country:
      type: string

WithJoin:
  type: view
  from:
    join:
      left:
        schema: Person
        as: a
      right:
        schema: PersonAdddress
        as: b
      on: a.name == b.name
  properties:
    name:
      expression: a.name
    otherName:
      expression: b.name
    country:
      expression: b.country

WithUnion:
  type: view
  from:
    union:
      - Person
      - PersonAdddress
  properties:
    name:
      expression: name

WithInline:
  type: view
  from:
    schema:
      type: view
      from:
        union:
          - Person
          - PersonAdddress
      properties:
        name:
          expression: name
  properties:
    name:
      expression: name

WithSqlSimple:
  type: view
  from:
    sql: SELECT name FROM WithInline WHERE name != 'test'
  properties:
    name:
      expression: name
      type: string

WithSqlGroup:
  type: view
  from:
    sql: SELECT name, COUNT() AS count FROM WithInline WHERE name != 'test' GROUP BY name
  properties:
    name:
      expression: name
      type: string
    count:
      expression: count
      type: integer

WithSqlNested:
  type: view
  from:
    sql: SELECT refId, COUNT(1) AS count FROM (SELECT name AS refId FROM A) GROUP BY refId
    using:
      A: WithSqlSimple
  properties:
    refId:
      type: string
    count:
      type: integer

ExternalView:
  type: view
  properties:
    value:
      type: string