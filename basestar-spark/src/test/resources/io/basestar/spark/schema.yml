$version: LATEST

A:
  type: object
  extensions:
    test: test
  properties:
    ref:
      type: B?
    arrayRef:
      type:
        array?: B
    mapRef:
      type:
        map?: B
    structRef:
      type: E?
  indexes:
    ref:
      partition: ref.id
  links:
    multi:
      schema: C
      expression: this.id == owner.id

StatsA:
  type: view
  from:
    schema: A
  group:
    - refId
  properties:
    refId:
      expression: ref.id
      type: string
    count:
      expression: count()
      type: integer

B:
  type: object
  properties:
    key:
      type: D?
    key2:
      type: G?
    value:
      type: integer?

C:
  type: object
  properties:
    owner:
      type: A?

D:
  type: object
  properties:
    x:
      type: integer

E:
  type: struct
  properties:
    ref:
      type: B?

F:
  type: object
  properties:
    date:
      type: date?
    datetime:
      type: datetime?

G:
  type: object
  properties:
    x:
      type: integer

AggView:
  type: view
  properties:
    agg:
      type: number
      expression: sum(value) + 2
    key:
      type: string?
      expression: key.id
    collect:
      type:
        array: B
      expression: collectArray({'id':id})
  from:
    schema: B
    sort:
      - value
    expand:
      - key
  group: key
  expand:
    - agg
    - key
    - collect
  where: key.x == 1

AliasView:
  type: view
  group:
    - id
  properties:
    id:
      type: string
      expression: key.id
    count:
      type: integer
      expression: count()
  from: B

LinkingView:
  type: view
  properties:
    id: id
    key: key
    key2: key2
  from:
    schema: B
    expand:
      - key
      - key2
  expand:
    - record
    - key
    - key2
  links:
    record:
      schema: AliasView
      expression: this.id == id
      single: true

File:
  type: object
  properties:
    tags:
      type:
        map?: string

FileRow:
  type: object
  properties:
    file:
      type: File
    rowIndex:
      type: integer

HeaderRows:
  type: view
  from:
    schema: FileRow
    expand: file
  group:
    - id
  properties:
    id:
      type: string
      expression: file.id
    rows:
      type:
        array: FileRow
      expression: "collectArray(this)"
  expand:
    - rows

LinkingViewToView:
  type: view
  properties:
    id: id
  links:
    headerRows:
      schema: HeaderRows
      single: true
      expression: "this.id == id"
  from: File
  expand:
    - headerRows.rows

Expressions:
  type: view
  properties:
    substr1:
      expression: id.substr(2, 6)
      type: string
    substr2:
      expression: id.substr(5)
      type: string
    mapValue:
      expression: "tags['a']"
      type: string
    lookupValue:
      expression: "{'loremipsum': 'x'}['' + id] ?? ('' + id)"
      type: string
  from: File

NestedExpand:
  type: object
  properties:
    ref:
      type: NestedExpand
  links:
    link:
      single: true
      schema: NestedExpand
      expression: this.id == ref.id
