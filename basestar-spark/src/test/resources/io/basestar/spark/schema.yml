$version: LATEST

A:
  type: object
  extensions:
    test: test
  properties:
    ref:
      type: B?
    arrayRef:
      type:
        array?: B
    mapRef:
      type:
        map?: B
    structRef:
      type: E?
  indexes:
    ref:
      partition: ref.id
  links:
    multi:
      schema: C
      expression: this.id == owner.id

StatsA:
  type: view
  from:
    schema: A
  group:
    - refId
  properties:
    refId:
      expression: ref.id
      type: string
    count:
      expression: count()
      type: integer

B:
  type: object
  properties:
    key:
      type: D?
    key2:
      type: G?
    value:
      type: integer?

C:
  type: object
  properties:
    owner:
      type: A?

D:
  type: object
  properties:
    x:
      type: integer

E:
  type: struct
  properties:
    ref:
      type: B?

F:
  type: object
  properties:
    date:
      type: date?
    datetime:
      type: datetime?

G:
  type: object
  properties:
    x:
      type: integer

AggView:
  type: view
  properties:
    agg:
      type: number
      expression: sum(value) + 2
    key:
      type: string?
      expression: key.id
    collect:
      type:
        array: B
      expression: collectArray({'id':id})
  from:
    schema: B
    sort:
      - value
    expand:
      - key
  group: key
#  expand:
#    - agg
#    - key
#    - collect
  where: key.x == 1

AliasView:
  type: view
  group:
    - id
  properties:
    id:
      type: string
      expression: key.id
    count:
      type: integer
      expression: count()
  from: B

LinkingView:
  type: view
  properties:
    id: id
    key: key
    key2: key2
  from:
    schema: B
    expand:
      - key
      - key2
#  expand:
#    - record
#    - key
#    - key2
  links:
    record:
      schema: AliasView
      expression: this.id == id
      single: true

File:
  type: object
  properties:
    tags:
      type:
        map?: string

FileRow:
  type: object
  properties:
    file:
      type: File
    rowIndex:
      type: integer

HeaderRows:
  type: view
  from:
    schema: FileRow
    expand: file
  group:
    - id
  properties:
    id:
      type: string
      expression: file.id
    rows:
      type:
        array: FileRow
      expression: "collectArray(this)"
#  expand:
#    - rows

LinkingViewToView:
  type: view
  properties:
    id: id
  links:
    headerRows:
      schema: HeaderRows
      single: true
      expression: "this.id == id"
  from: File
#  expand:
#    - headerRows.rows

Expressions:
  type: view
  properties:
    substr1:
      expression: id.substr(2, 6)
      type: string
    substr2:
      expression: id.substr(5)
      type: string
      constraints:
        - assert:
           expression: false
          groups:
            - warning
    mapValue:
      expression: "tags['a']"
      type: string
    lookupValue:
      expression: "{'loremipsum': 'x'}['' + id] ?? ('' + id)"
      type: string
  from: File

NestedExpand:
  type: object
  properties:
    ref:
      type: NestedExpand
  links:
    link:
      single: true
      schema: NestedExpand
      expression: this.id == ref.id

SqlView:
  type: view
  using:
    A: A
  sql: SELECT ref.id AS refId, COUNT(*) AS count, DATE_DIFF('day', FROM_ISO8601_DATE('2020-01-01'), FROM_ISO8601_DATE('2020-01-02')) AS diff FROM A GROUP BY refId
  primaryKey: refId
  properties:
    refId:
      type: string
    count:
      type: integer

SqlView2:
  type: view
  using:
    A: A
  sql: "with\r\nwerCalculations as (\r\n  select wer.fileId, wer.lineIndex werLineIndex,\r\n  case\r\n    when ccr.rate is not null then ccr.rate/pow(10,6)\r\n    else 1\r\n  end sourceCurrencyRate,\r\n  date_trunc('quarter', date_add('day', date_diff('day', salesPeriodStart, salesPeriodEnd), salesPeriodStart)) salesPeriod\r\n  FROM sdp_03ae67981673_delta_crd_record.crd_record_wer_base wer\r\n  left join sdp_03ae67981673_delta_crd_record.crd_record_ccr_base ccr on (wer.fileId = ccr.fileId and wer.currency = ccr.currencyCode)\r\n),\r\nsdnCalculations as (\r\n  select fileId, date_trunc('quarter', date_add('day', date_diff('day', accountingPeriodStart, accountingPeriodEnd), accountingPeriodStart)) accountingPeriod\r\n  FROM sdp_03ae67981673_delta_crd_record.crd_record_sdn_base sdn\r\n),\r\nexploitationCalculations as (\r\n  select wer.fileId, wer.exploitationSourceIdentifier, wer.linkLineIndexes['MDS'] mdsLineIndex,\r\n  max(isrc) isrc,\r\n  date(max(salesPeriodStart)) salesPeriodStart,\r\n  date(max(salesPeriodEnd)) salesPeriodEnd,\r\n  concat(cast(year(max(wc.salesPeriod)) as string),'-Q',cast(quarter(max(wc.salesPeriod)) as string)) salesQuarter,\r\n  max(wc.salesPeriod) salesQuarterDate,\r\n  max(distributionCategory) distributionCategory,\r\n  case\r\n    when max(distributionCategory) = 45 then 'STREAM'\r\n    when max(distributionCategory) = 40 then 'DOWNLOAD'\r\n    else cast(max(distributionCategory) as string)\r\n  end distributionCategoryName,\r\n  max(quantity) quantity,\r\n  case\r\n    when max(distributionCategory) = 45 then max(quantity)\r\n    else 0\r\n  end quantityStream,\r\n  case\r\n    when max(distributionCategory) = 40 then max(quantity)\r\n    else 0\r\n  end quantityDownload,\r\n  (sum(mip.sharePercentage) / pow(10,max(sdn.percentageDecimalPlaces))) normalisedSharePercentage,\r\n  ((max(royaltyBasisPrice) * max(wc.sourceCurrencyRate)) / pow(10,max(sdn.amountDecimalPlaces))) normalisedRoyaltyBasis,\r\n  ((sum(grossRoyaltyAmount) * max(wc.sourceCurrencyRate)) / pow(10,max(sdn.amountDecimalPlaces))) normalisedGrossRoyalty,\r\n  ((sum(sourceSocietyCommissionAmount) * max(wc.sourceCurrencyRate)) / pow(10,max(sdn.amountDecimalPlaces))) normalisedSourceSocietyCommission,\r\n  ((sum(sourceSocietyTaxAmount) * max(wc.sourceCurrencyRate)) / pow(10,max(sdn.amountDecimalPlaces))) normalisedSourceSocietyTax,\r\n  (sum(taxAmount) / pow(10,max(sdn.amountDecimalPlaces))) normalisedRemittedSocietyTax,\r\n  (sum(remittedRoyaltyAmount) / pow(10,max(sdn.amountDecimalPlaces))) normalisedRemittedRoyalty\r\n  FROM sdp_03ae67981673_delta_crd_record.crd_record_wer_base wer,\r\n  sdp_03ae67981673_delta_crd_record.crd_record_mip_base mip,\r\n  sdp_03ae67981673_delta_crd_record.crd_record_sdn_base sdn,\r\n  werCalculations wc\r\n  where wer.fileId = wc.fileId and wer.lineIndex = wc.werLineIndex\r\n  and wer.fileId = mip.fileId and wer.linkLineIndexes['MIP'] = mip.lineIndex\r\n  and wer.fileId = sdn.fileId\r\n  group by wer.fileId, wer.exploitationSourceIdentifier, wer.linkLineIndexes['MDS']\r\n)\r\nselect sdn.fileId,\r\nsdn.remittingSocietyDistributionIdentifier,\r\nsubstr(sdn.remittingSocietyDistributionIdentifier, 3) remittingSocietyDistributionIdentifierNumber,\r\nsdn.nameOfRecipient,\r\nconcat(cast(year(sc.accountingPeriod) as string),'-Q',cast(quarter(sc.accountingPeriod) as string)) accountingQuater,\r\nsc.accountingPeriod accountingQuaterDate,\r\nec.salesQuarter,\r\nec.salesQuarterDate,\r\nsdn.typeOfRightCategory,\r\nmdr.rightCode,\r\nmdt.interestTerritoryTisn countryCode,\r\nmdt.interestTerritoryTisan countryName,\r\nsum(quantity) quantity,\r\nsum(quantityStream) quantityStream,\r\nsum(quantityDownload) quantityDownload,\r\navg(normalisedSharePercentage) averageSharePercentage,\r\nsdn.remittanceCurrency currency,\r\nsum(normalisedRoyaltyBasis) totalRoyaltyBasis,\r\nsum(normalisedGrossRoyalty) totalGrossRoyalty,\r\nsum(normalisedSourceSocietyCommission) totalSourceSocietyCommission,\r\nsum(normalisedSourceSocietyTax) totalSourceSocietyTax,\r\nsum(normalisedRemittedSocietyTax) totalRemittedSocietyTax,\r\nsum(normalisedRemittedRoyalty) totalRemittedRoyalty\r\nFROM sdp_03ae67981673_delta_crd_record.crd_record_mds_base mds,\r\nsdp_03ae67981673_delta_crd_record.crd_record_mdr_base mdr,\r\nsdp_03ae67981673_delta_crd_record.crd_record_mdt_base mdt,\r\nsdp_03ae67981673_delta_crd_record.crd_record_sdn_base sdn,\r\nsdnCalculations sc,\r\nexploitationCalculations ec\r\nwhere mds.fileId = sdn.fileId\r\nand sdn.fileId = sc.fileId\r\nand mds.fileId = ec.fileId and mds.lineIndex = ec.mdsLineIndex\r\nand mds.fileId = mdr.fileId and mdr.linkLineIndexes['MDS'] = mds.lineIndex\r\nand mds.fileId = mdt.fileId and mdt.linkLineIndexes['MDS'] = mds.lineIndex\r\ngroup by sdn.fileId,\r\nsdn.remittingSocietyDistributionIdentifier,\r\nsdn.nameOfRecipient,\r\nsdn.remittanceCurrency,\r\nsc.accountingPeriod,\r\nec.salesQuarter,\r\nec.salesQuarterDate,\r\nsdn.typeOfRightCategory,\r\nmdr.rightCode,\r\nmdt.interestTerritoryTisn,\r\nmdt.interestTerritoryTisan,\r\nec.distributionCategory,\r\nec.distributionCategoryName"
  primaryKey:
    - fileId